/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mcq.views;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import mcq.core.dto.ExamDto;
import mcq.core.dto.OptionDto;
import mcq.core.dto.OptionsDto;
import mcq.core.dto.QuestionDto;
import mcq.core.services.Session;

/**
 *
 * @author samundra-sage
 */
public class Exam extends javax.swing.JFrame {

    int questionSetId;
    mcq.core.services.Exam exam;
    ExamDto examDto;
    JRadioButton[] options;
    String rightAnswer;
    QuestionDto currentQuestion;

    public Exam(int questionSetId) {
        this.questionSetId = questionSetId;
        initComponents();
        this.exam = new mcq.core.services.Exam();
        options = new JRadioButton[]{optionA, optionB, optionC, optionD};
        try {
            this.examDto = this.exam.getAllQuestionsBySet(questionSetId);
        } catch (SQLException ex) {
            Logger.getLogger(Exam.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.loadQuestions();
    }

    void fillExamSheet(QuestionDto questionDto) {
        jLabel1.setText("Question: (" + questionDto.getMark() + "  marks)");
        questionHolder.setText(questionDto.getQuestion());
        ArrayList<OptionDto> optionsDto = questionDto.getOptions().getOptions();
        Iterator optionsIterator = optionsDto.iterator();
        int counter = 0;
        while (optionsIterator.hasNext()) {
            OptionDto optionDto = (OptionDto) optionsIterator.next();
            options[counter].setText(optionDto.getLabel());
            options[counter].setName(optionDto.getId() + "");
            counter++;
        }

    }

    private void handleRightAnswer(String selected) {
        currentQuestion.setSelectedAnswer(selected);
        for (JRadioButton option : options) {
            System.out.println(selected + " " + option.getName());
            if (!option.getName().equals(selected)) {
                option.setSelected(false);
            } else {
                rightAnswer = selected;
                option.setSelected(true);
                System.out.println("rig");
            }
        }
    }

    public void loadQuestions() {
        currentQuestion = this.examDto.getQuestion().get(this.exam.getQuestionIndex());
        this.fillExamSheet(currentQuestion);
        if (this.exam.getQuestionIndex() + 1 == this.examDto.getQuestion().size()) {
            nextBtn.setText("Submit");
        } else {
            nextBtn.setEnabled(true);

        }

        if (this.exam.getQuestionIndex() == 0) {
            previousBtn.setEnabled(false);
        } else {
            previousBtn.setEnabled(true);
        }
        System.out.println(currentQuestion.getSelectedAnswer());
        if (!currentQuestion.getSelectedAnswer().isEmpty()) {
            this.handleRightAnswer(currentQuestion.getSelectedAnswer());
        }

    }

    public Exam() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        questionHolder = new javax.swing.JLabel();
        optionA = new javax.swing.JRadioButton();
        optionB = new javax.swing.JRadioButton();
        optionC = new javax.swing.JRadioButton();
        optionD = new javax.swing.JRadioButton();
        nextBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        previousBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Question:");

        questionHolder.setText("question loading...");

        optionA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionAActionPerformed(evt);
            }
        });

        optionB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionBActionPerformed(evt);
            }
        });

        optionC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionCActionPerformed(evt);
            }
        });

        optionD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                optionDActionPerformed(evt);
            }
        });

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Answers");

        previousBtn.setText("Previous");
        previousBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)
                                .addComponent(questionHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(optionB)
                                .addComponent(optionA)
                                .addComponent(optionC)
                                .addComponent(optionD)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(118, 118, 118)
                            .addComponent(nextBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(previousBtn))))
                .addContainerGap(184, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionHolder, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(optionA)
                        .addGap(7, 7, 7)
                        .addComponent(optionB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(optionC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(optionD)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 160, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nextBtn)
                    .addComponent(previousBtn))
                .addGap(29, 29, 29))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void optionAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionAActionPerformed
        // TODO add your handling code here:

        this.handleRightAnswer(optionA.getName());
    }//GEN-LAST:event_optionAActionPerformed

    private void optionBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionBActionPerformed
        // TODO add your handling code here:
        this.handleRightAnswer(optionB.getName());

    }//GEN-LAST:event_optionBActionPerformed

    private void optionCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionCActionPerformed
        // TODO add your handling code here:
        this.handleRightAnswer(optionC.getName());

    }//GEN-LAST:event_optionCActionPerformed

    private void optionDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_optionDActionPerformed
        // TODO add your handling code here:
        this.handleRightAnswer(optionD.getName());

    }//GEN-LAST:event_optionDActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        if (evt.getActionCommand().equals("Submit")) {
            try {
                this.exam.submitAnswer(this.examDto, Session.getInstance().getUser().getId());
                this.dispose();
                new ReportCard(this.questionSetId).show();
                return;
            } catch (SQLException ex) {
                Logger.getLogger(Exam.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (rightAnswer == null || rightAnswer.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a answer");
            return;
        }
        this.exam.setQuestionIndex(this.exam.getQuestionIndex() + 1);
        this.resetAnswers();
        this.loadQuestions();
    }//GEN-LAST:event_nextBtnActionPerformed

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousBtnActionPerformed
        // TODO add your handling code here:
        this.exam.setQuestionIndex(this.exam.getQuestionIndex() - 1);
        this.resetAnswers();
        this.loadQuestions();
    }//GEN-LAST:event_previousBtnActionPerformed

    void resetAnswers() {
        for (JRadioButton option : options) {
            option.setSelected(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Exam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Exam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton nextBtn;
    private javax.swing.JRadioButton optionA;
    private javax.swing.JRadioButton optionB;
    private javax.swing.JRadioButton optionC;
    private javax.swing.JRadioButton optionD;
    private javax.swing.JButton previousBtn;
    private javax.swing.JLabel questionHolder;
    // End of variables declaration//GEN-END:variables
}
