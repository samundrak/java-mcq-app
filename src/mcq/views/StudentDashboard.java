/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mcq.views;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import mcq.core.Strings;
import mcq.core.dto.UserDto;
import mcq.core.services.Session;
import mcq.core.services.Student;

/**
 *
 * @author samundra-sage
 */
public class StudentDashboard extends javax.swing.JFrame {

    /**
     * Creates new form StudentDashboard
     */
    public StudentDashboard() {
        initComponents();
        loadTableContents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dashTable = new javax.swing.JTable();
        seeReport = new javax.swing.JButton();
        attemptExam = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dashTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(dashTable);

        seeReport.setText("See Report");
        seeReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seeReportActionPerformed(evt);
            }
        });

        attemptExam.setText("Attempt Exam");
        attemptExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attemptExamActionPerformed(evt);
            }
        });

        jLabel1.setText("Welcome:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 972, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(attemptExam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(seeReport)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seeReport)
                    .addComponent(attemptExam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void attemptExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attemptExamActionPerformed
        // TODO add your handling code here:
        int row = dashTable.getSelectedRow();
        if (row < -1) {
            return;
        }
        String id = (String) dashTable.getModel().getValueAt(row, 0);
        new Exam(Integer.parseInt(id)).show();
    }//GEN-LAST:event_attemptExamActionPerformed

    private void seeReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seeReportActionPerformed
        // TODO add your handling code here:
        int row = dashTable.getSelectedRow();
        if (row < -1) {
            return;
        }
        String id = (String) dashTable.getModel().getValueAt(row, 0);
        new ReportCard(Integer.parseInt(id)).show();
    }//GEN-LAST:event_seeReportActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attemptExam;
    private javax.swing.JTable dashTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton seeReport;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables

    private void loadTableContents() {
        UserDto user = Session.getInstance().getUser();
        userLabel.setText(user.getFirst_name() + " " + user.getLast_name());
        try {
            DefaultTableModel dtm = (DefaultTableModel) dashTable.getModel();
            dtm.setRowCount(0);

            TableColumn col = new TableColumn();
            dtm.addColumn(Strings.QUESTION_SET_ID);
            dtm.addColumn(Strings.EXAM_SET_NAME);
            dtm.addColumn(Strings.FULL_MARKS);
            dtm.addColumn(Strings.NO_OF_QUESTIONS);
            dtm.addColumn(Strings.QUESTION_ATTEMPTED);
            dtm.addColumn(Strings.MARKS_OBTAINED);

            ArrayList<HashMap<String, String>> dash = new Student().getDashContents(user.getId());
            Iterator it = dash.iterator();
            while (it.hasNext()) {
                HashMap<String, String> hm = (HashMap<String, String>) it.next();

                Vector v = new Vector();
                v.add(hm.get(Strings.QUESTION_SET_ID));
                v.add(hm.get(Strings.EXAM_SET_NAME));
                v.add(hm.get(Strings.FULL_MARKS));
                v.add(hm.get(Strings.NO_OF_QUESTIONS));
//                v.add(hm.get(Strings.QUESTION_ATTEMPTED));

                dtm.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(StudentDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
